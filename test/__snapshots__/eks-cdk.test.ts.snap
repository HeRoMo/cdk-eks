// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot Test 1`] = `
Object {
  "Outputs": Object {
    "ExportsOutputRefEksVpc4BB427FA336B0142": Object {
      "Export": Object {
        "Name": "MyTestVpcStack:ExportsOutputRefEksVpc4BB427FA336B0142",
      },
      "Value": Object {
        "Ref": "EksVpc4BB427FA",
      },
    },
    "ExportsOutputRefEksVpcPrivateSubnet1SubnetDC5B4B59DBC53273": Object {
      "Export": Object {
        "Name": "MyTestVpcStack:ExportsOutputRefEksVpcPrivateSubnet1SubnetDC5B4B59DBC53273",
      },
      "Value": Object {
        "Ref": "EksVpcPrivateSubnet1SubnetDC5B4B59",
      },
    },
    "ExportsOutputRefEksVpcPrivateSubnet2SubnetAED557957B12CFC0": Object {
      "Export": Object {
        "Name": "MyTestVpcStack:ExportsOutputRefEksVpcPrivateSubnet2SubnetAED557957B12CFC0",
      },
      "Value": Object {
        "Ref": "EksVpcPrivateSubnet2SubnetAED55795",
      },
    },
    "ExportsOutputRefEksVpcPrivateSubnet3Subnet012DCC552D916B78": Object {
      "Export": Object {
        "Name": "MyTestVpcStack:ExportsOutputRefEksVpcPrivateSubnet3Subnet012DCC552D916B78",
      },
      "Value": Object {
        "Ref": "EksVpcPrivateSubnet3Subnet012DCC55",
      },
    },
    "ExportsOutputRefEksVpcPublicSubnet1SubnetD58F89DF4375B9FF": Object {
      "Export": Object {
        "Name": "MyTestVpcStack:ExportsOutputRefEksVpcPublicSubnet1SubnetD58F89DF4375B9FF",
      },
      "Value": Object {
        "Ref": "EksVpcPublicSubnet1SubnetD58F89DF",
      },
    },
    "ExportsOutputRefEksVpcPublicSubnet2Subnet756C2CF701725B9C": Object {
      "Export": Object {
        "Name": "MyTestVpcStack:ExportsOutputRefEksVpcPublicSubnet2Subnet756C2CF701725B9C",
      },
      "Value": Object {
        "Ref": "EksVpcPublicSubnet2Subnet756C2CF7",
      },
    },
    "ExportsOutputRefEksVpcPublicSubnet3Subnet8906CA88B6B679EB": Object {
      "Export": Object {
        "Name": "MyTestVpcStack:ExportsOutputRefEksVpcPublicSubnet3Subnet8906CA88B6B679EB",
      },
      "Value": Object {
        "Ref": "EksVpcPublicSubnet3Subnet8906CA88",
      },
    },
  },
  "Resources": Object {
    "EksVpc4BB427FA": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestVpcStack/EksVpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "EksVpcIGWF47619EF": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestVpcStack/EksVpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "EksVpcPrivateSubnet1DefaultRouteB9511F58": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "EksVpcPublicSubnet1NATGatewayE7F93D77",
        },
        "RouteTableId": Object {
          "Ref": "EksVpcPrivateSubnet1RouteTable1DCC4CD9",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "EksVpcPrivateSubnet1RouteTable1DCC4CD9": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestVpcStack/EksVpc/PrivateSubnet1",
          },
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
        ],
        "VpcId": Object {
          "Ref": "EksVpc4BB427FA",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "EksVpcPrivateSubnet1RouteTableAssociationAA0DA95E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "EksVpcPrivateSubnet1RouteTable1DCC4CD9",
        },
        "SubnetId": Object {
          "Ref": "EksVpcPrivateSubnet1SubnetDC5B4B59",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "EksVpcPrivateSubnet1SubnetDC5B4B59": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.48.0/20",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestVpcStack/EksVpc/PrivateSubnet1",
          },
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
        ],
        "VpcId": Object {
          "Ref": "EksVpc4BB427FA",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "EksVpcPrivateSubnet2DefaultRoute5334FF92": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "EksVpcPublicSubnet1NATGatewayE7F93D77",
        },
        "RouteTableId": Object {
          "Ref": "EksVpcPrivateSubnet2RouteTable77AEC3A7",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "EksVpcPrivateSubnet2RouteTable77AEC3A7": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestVpcStack/EksVpc/PrivateSubnet2",
          },
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
        ],
        "VpcId": Object {
          "Ref": "EksVpc4BB427FA",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "EksVpcPrivateSubnet2RouteTableAssociation58668E4B": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "EksVpcPrivateSubnet2RouteTable77AEC3A7",
        },
        "SubnetId": Object {
          "Ref": "EksVpcPrivateSubnet2SubnetAED55795",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "EksVpcPrivateSubnet2SubnetAED55795": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.64.0/20",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestVpcStack/EksVpc/PrivateSubnet2",
          },
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
        ],
        "VpcId": Object {
          "Ref": "EksVpc4BB427FA",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "EksVpcPrivateSubnet3DefaultRoute4CE27A11": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "EksVpcPublicSubnet1NATGatewayE7F93D77",
        },
        "RouteTableId": Object {
          "Ref": "EksVpcPrivateSubnet3RouteTable08F9C27A",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "EksVpcPrivateSubnet3RouteTable08F9C27A": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestVpcStack/EksVpc/PrivateSubnet3",
          },
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
        ],
        "VpcId": Object {
          "Ref": "EksVpc4BB427FA",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "EksVpcPrivateSubnet3RouteTableAssociationBED8D434": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "EksVpcPrivateSubnet3RouteTable08F9C27A",
        },
        "SubnetId": Object {
          "Ref": "EksVpcPrivateSubnet3Subnet012DCC55",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "EksVpcPrivateSubnet3Subnet012DCC55": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.80.0/20",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestVpcStack/EksVpc/PrivateSubnet3",
          },
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
        ],
        "VpcId": Object {
          "Ref": "EksVpc4BB427FA",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "EksVpcPublicSubnet1DefaultRouteD34282A5": Object {
      "DependsOn": Array [
        "EksVpcVPCGW2FA008A1",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "EksVpcIGWF47619EF",
        },
        "RouteTableId": Object {
          "Ref": "EksVpcPublicSubnet1RouteTableA2778FB8",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "EksVpcPublicSubnet1EIP34F968E2": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestVpcStack/EksVpc/PublicSubnet1",
          },
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "EksVpcPublicSubnet1NATGatewayE7F93D77": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "EksVpcPublicSubnet1EIP34F968E2",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "EksVpcPublicSubnet1SubnetD58F89DF",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestVpcStack/EksVpc/PublicSubnet1",
          },
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "EksVpcPublicSubnet1RouteTableA2778FB8": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestVpcStack/EksVpc/PublicSubnet1",
          },
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
        ],
        "VpcId": Object {
          "Ref": "EksVpc4BB427FA",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "EksVpcPublicSubnet1RouteTableAssociation87981DA4": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "EksVpcPublicSubnet1RouteTableA2778FB8",
        },
        "SubnetId": Object {
          "Ref": "EksVpcPublicSubnet1SubnetD58F89DF",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "EksVpcPublicSubnet1SubnetD58F89DF": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/20",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestVpcStack/EksVpc/PublicSubnet1",
          },
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
        ],
        "VpcId": Object {
          "Ref": "EksVpc4BB427FA",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "EksVpcPublicSubnet2DefaultRouteC7BFDEF0": Object {
      "DependsOn": Array [
        "EksVpcVPCGW2FA008A1",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "EksVpcIGWF47619EF",
        },
        "RouteTableId": Object {
          "Ref": "EksVpcPublicSubnet2RouteTable57185A3D",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "EksVpcPublicSubnet2RouteTable57185A3D": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestVpcStack/EksVpc/PublicSubnet2",
          },
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
        ],
        "VpcId": Object {
          "Ref": "EksVpc4BB427FA",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "EksVpcPublicSubnet2RouteTableAssociationA0339F94": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "EksVpcPublicSubnet2RouteTable57185A3D",
        },
        "SubnetId": Object {
          "Ref": "EksVpcPublicSubnet2Subnet756C2CF7",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "EksVpcPublicSubnet2Subnet756C2CF7": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.16.0/20",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestVpcStack/EksVpc/PublicSubnet2",
          },
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
        ],
        "VpcId": Object {
          "Ref": "EksVpc4BB427FA",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "EksVpcPublicSubnet3DefaultRoute6D10CA45": Object {
      "DependsOn": Array [
        "EksVpcVPCGW2FA008A1",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "EksVpcIGWF47619EF",
        },
        "RouteTableId": Object {
          "Ref": "EksVpcPublicSubnet3RouteTable3B1F1C43",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "EksVpcPublicSubnet3RouteTable3B1F1C43": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestVpcStack/EksVpc/PublicSubnet3",
          },
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
        ],
        "VpcId": Object {
          "Ref": "EksVpc4BB427FA",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "EksVpcPublicSubnet3RouteTableAssociation203CC159": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "EksVpcPublicSubnet3RouteTable3B1F1C43",
        },
        "SubnetId": Object {
          "Ref": "EksVpcPublicSubnet3Subnet8906CA88",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "EksVpcPublicSubnet3Subnet8906CA88": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.32.0/20",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyTestVpcStack/EksVpc/PublicSubnet3",
          },
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
        ],
        "VpcId": Object {
          "Ref": "EksVpc4BB427FA",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "EksVpcVPCGW2FA008A1": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "EksVpcIGWF47619EF",
        },
        "VpcId": Object {
          "Ref": "EksVpc4BB427FA",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
}
`;

exports[`Snapshot Test 2`] = `
Object {
  "Outputs": Object {
    "clusterConfigCommand30DB378E": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "aws eks update-kubeconfig --name ",
            Object {
              "Ref": "clusterC5B25D0D",
            },
            " --region ap-northeast-1 --role-arn ",
            Object {
              "Fn::GetAtt": Array [
                "EksRole7A4BFDF2",
                "Arn",
              ],
            },
          ],
        ],
      },
    },
    "clusterGetTokenCommand09C244B5": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "aws eks get-token --cluster-name ",
            Object {
              "Ref": "clusterC5B25D0D",
            },
            " --region ap-northeast-1 --role-arn ",
            Object {
              "Fn::GetAtt": Array [
                "EksRole7A4BFDF2",
                "Arn",
              ],
            },
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters39ff76ace201d780b44b007170b6c3c07a4ae1da38071cb1a5612eb69fe98a95ArtifactHash985BDE74": Object {
      "Description": "Artifact hash for asset \\"39ff76ace201d780b44b007170b6c3c07a4ae1da38071cb1a5612eb69fe98a95\\"",
      "Type": "String",
    },
    "AssetParameters39ff76ace201d780b44b007170b6c3c07a4ae1da38071cb1a5612eb69fe98a95S3BucketE5D40562": Object {
      "Description": "S3 bucket for asset \\"39ff76ace201d780b44b007170b6c3c07a4ae1da38071cb1a5612eb69fe98a95\\"",
      "Type": "String",
    },
    "AssetParameters39ff76ace201d780b44b007170b6c3c07a4ae1da38071cb1a5612eb69fe98a95S3VersionKey7D7C6343": Object {
      "Description": "S3 key for asset version \\"39ff76ace201d780b44b007170b6c3c07a4ae1da38071cb1a5612eb69fe98a95\\"",
      "Type": "String",
    },
    "AssetParameters4745ceb0c1d5244f98a439c192c0a194d2b1da4ac56407975c05eab89fdeaf2bArtifactHashAABCD36F": Object {
      "Description": "Artifact hash for asset \\"4745ceb0c1d5244f98a439c192c0a194d2b1da4ac56407975c05eab89fdeaf2b\\"",
      "Type": "String",
    },
    "AssetParameters4745ceb0c1d5244f98a439c192c0a194d2b1da4ac56407975c05eab89fdeaf2bS3Bucket5723489D": Object {
      "Description": "S3 bucket for asset \\"4745ceb0c1d5244f98a439c192c0a194d2b1da4ac56407975c05eab89fdeaf2b\\"",
      "Type": "String",
    },
    "AssetParameters4745ceb0c1d5244f98a439c192c0a194d2b1da4ac56407975c05eab89fdeaf2bS3VersionKey0E90E641": Object {
      "Description": "S3 key for asset version \\"4745ceb0c1d5244f98a439c192c0a194d2b1da4ac56407975c05eab89fdeaf2b\\"",
      "Type": "String",
    },
    "AssetParameters4c2988a57571fd4c34de12bae67441541aeea1a59e085f95e5b708922ff45061ArtifactHash40CCFA64": Object {
      "Description": "Artifact hash for asset \\"4c2988a57571fd4c34de12bae67441541aeea1a59e085f95e5b708922ff45061\\"",
      "Type": "String",
    },
    "AssetParameters4c2988a57571fd4c34de12bae67441541aeea1a59e085f95e5b708922ff45061S3Bucket0A1029B1": Object {
      "Description": "S3 bucket for asset \\"4c2988a57571fd4c34de12bae67441541aeea1a59e085f95e5b708922ff45061\\"",
      "Type": "String",
    },
    "AssetParameters4c2988a57571fd4c34de12bae67441541aeea1a59e085f95e5b708922ff45061S3VersionKeyFB75FDAC": Object {
      "Description": "S3 key for asset version \\"4c2988a57571fd4c34de12bae67441541aeea1a59e085f95e5b708922ff45061\\"",
      "Type": "String",
    },
    "AssetParametersa6d508eaaa0d3cddbb47a84123fc878809c8431c5466f360912f70b5b9770afbArtifactHashBF08C2D7": Object {
      "Description": "Artifact hash for asset \\"a6d508eaaa0d3cddbb47a84123fc878809c8431c5466f360912f70b5b9770afb\\"",
      "Type": "String",
    },
    "AssetParametersa6d508eaaa0d3cddbb47a84123fc878809c8431c5466f360912f70b5b9770afbS3Bucket0C3A00C2": Object {
      "Description": "S3 bucket for asset \\"a6d508eaaa0d3cddbb47a84123fc878809c8431c5466f360912f70b5b9770afb\\"",
      "Type": "String",
    },
    "AssetParametersa6d508eaaa0d3cddbb47a84123fc878809c8431c5466f360912f70b5b9770afbS3VersionKeyBED95764": Object {
      "Description": "S3 key for asset version \\"a6d508eaaa0d3cddbb47a84123fc878809c8431c5466f360912f70b5b9770afb\\"",
      "Type": "String",
    },
    "AssetParameterse826620d24fa9b8f1789cd13e260f1c557e60bf4314d456530963654a9fb766bArtifactHash661CBD80": Object {
      "Description": "Artifact hash for asset \\"e826620d24fa9b8f1789cd13e260f1c557e60bf4314d456530963654a9fb766b\\"",
      "Type": "String",
    },
    "AssetParameterse826620d24fa9b8f1789cd13e260f1c557e60bf4314d456530963654a9fb766bS3BucketC27C60D2": Object {
      "Description": "S3 bucket for asset \\"e826620d24fa9b8f1789cd13e260f1c557e60bf4314d456530963654a9fb766b\\"",
      "Type": "String",
    },
    "AssetParameterse826620d24fa9b8f1789cd13e260f1c557e60bf4314d456530963654a9fb766bS3VersionKey72A176B8": Object {
      "Description": "S3 key for asset version \\"e826620d24fa9b8f1789cd13e260f1c557e60bf4314d456530963654a9fb766b\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "ALBIngressControllerALBIngressControllerIAM5EEAE1B6": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "acm:DescribeCertificate",
                "acm:ListCertificates",
                "acm:GetCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:CreateSecurityGroup",
                "ec2:CreateTags",
                "ec2:DeleteTags",
                "ec2:DeleteSecurityGroup",
                "ec2:DescribeAccountAttributes",
                "ec2:DescribeAddresses",
                "ec2:DescribeInstances",
                "ec2:DescribeInstanceStatus",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeTags",
                "ec2:DescribeVpcs",
                "ec2:ModifyInstanceAttribute",
                "ec2:ModifyNetworkInterfaceAttribute",
                "ec2:RevokeSecurityGroupIngress",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "elasticloadbalancing:AddListenerCertificates",
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:CreateListener",
                "elasticloadbalancing:CreateLoadBalancer",
                "elasticloadbalancing:CreateRule",
                "elasticloadbalancing:CreateTargetGroup",
                "elasticloadbalancing:DeleteListener",
                "elasticloadbalancing:DeleteLoadBalancer",
                "elasticloadbalancing:DeleteRule",
                "elasticloadbalancing:DeleteTargetGroup",
                "elasticloadbalancing:DeregisterTargets",
                "elasticloadbalancing:DescribeListenerCertificates",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DescribeRules",
                "elasticloadbalancing:DescribeSSLPolicies",
                "elasticloadbalancing:DescribeTags",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetGroupAttributes",
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:ModifyListener",
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "elasticloadbalancing:ModifyRule",
                "elasticloadbalancing:ModifyTargetGroup",
                "elasticloadbalancing:ModifyTargetGroupAttributes",
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:RemoveListenerCertificates",
                "elasticloadbalancing:RemoveTags",
                "elasticloadbalancing:SetIpAddressType",
                "elasticloadbalancing:SetSecurityGroups",
                "elasticloadbalancing:SetSubnets",
                "elasticloadbalancing:SetWebACL",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "iam:CreateServiceLinkedRole",
                "iam:GetServerCertificate",
                "iam:ListServerCertificates",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "cognito-idp:DescribeUserPoolClient",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "waf-regional:GetWebACLForResource",
                "waf-regional:GetWebACL",
                "waf-regional:AssociateWebACL",
                "waf-regional:DisassociateWebACL",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "tag:GetResources",
                "tag:TagResources",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "waf:GetWebACL",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "shield:DescribeProtection",
                "shield:GetSubscriptionState",
                "shield:DeleteProtection",
                "shield:CreateProtection",
                "shield:DescribeSubscription",
                "shield:ListProtections",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ALBIngressControllerIAM",
        "Roles": Array [
          Object {
            "Ref": "clusterRole88D0C969",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ALBIngressControllerK8sResource7B4DBC35": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "clusterC5B25D0D",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"alb-ingress-controller\\"},\\"name\\":\\"alb-ingress-controller\\"},\\"rules\\":[{\\"apiGroups\\":[\\"\\",\\"extensions\\"],\\"resources\\":[\\"configmaps\\",\\"endpoints\\",\\"events\\",\\"ingresses\\",\\"ingresses/status\\",\\"services\\",\\"pods/status\\"],\\"verbs\\":[\\"create\\",\\"get\\",\\"list\\",\\"update\\",\\"watch\\",\\"patch\\"]},{\\"apiGroups\\":[\\"\\",\\"extensions\\"],\\"resources\\":[\\"nodes\\",\\"pods\\",\\"secrets\\",\\"services\\",\\"namespaces\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"alb-ingress-controller\\"},\\"name\\":\\"alb-ingress-controller\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"alb-ingress-controller\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"alb-ingress-controller\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"alb-ingress-controller\\"},\\"name\\":\\"alb-ingress-controller\\",\\"namespace\\":\\"kube-system\\"}},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"alb-ingress-controller\\"},\\"name\\":\\"alb-ingress-controller\\",\\"namespace\\":\\"kube-system\\"},\\"spec\\":{\\"selector\\":{\\"matchLabels\\":{\\"app.kubernetes.io/name\\":\\"alb-ingress-controller\\"}},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"alb-ingress-controller\\"}},\\"spec\\":{\\"containers\\":[{\\"name\\":\\"alb-ingress-controller\\",\\"args\\":[\\"--ingress-class=alb\\",\\"--cluster-name=",
              Object {
                "Ref": "clusterC5B25D0D",
              },
              "\\",\\"--aws-vpc-id=",
              Object {
                "Fn::ImportValue": "MyTestVpcStack:ExportsOutputRefEksVpc4BB427FA336B0142",
              },
              "\\",\\"--aws-region=ap-northeast-1\\"],\\"env\\":null,\\"image\\":\\"docker.io/amazon/aws-alb-ingress-controller:v1.1.6\\"}],\\"serviceAccountName\\":\\"alb-ingress-controller\\"}}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "clusterCreationRole2B3B5002",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.MyTestEksCdkStackawscdkawseksKubectlProviderframeworkonEvent5A89646AArn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "EksRole7A4BFDF2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::999999999999:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSClusterPolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSServicePolicy",
              ],
            ],
          },
        ],
        "RoleName": "MyEKSRole",
      },
      "Type": "AWS::IAM::Role",
    },
    "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454": Object {
      "Properties": Object {
        "Parameters": Object {
          "referencetoMyTestEksCdkStackAssetParameters4745ceb0c1d5244f98a439c192c0a194d2b1da4ac56407975c05eab89fdeaf2bS3Bucket498B7AF4Ref": Object {
            "Ref": "AssetParameters4745ceb0c1d5244f98a439c192c0a194d2b1da4ac56407975c05eab89fdeaf2bS3Bucket5723489D",
          },
          "referencetoMyTestEksCdkStackAssetParameters4745ceb0c1d5244f98a439c192c0a194d2b1da4ac56407975c05eab89fdeaf2bS3VersionKeyEFA5CF7BRef": Object {
            "Ref": "AssetParameters4745ceb0c1d5244f98a439c192c0a194d2b1da4ac56407975c05eab89fdeaf2bS3VersionKey0E90E641",
          },
          "referencetoMyTestEksCdkStackAssetParameters4c2988a57571fd4c34de12bae67441541aeea1a59e085f95e5b708922ff45061S3Bucket30A92DBERef": Object {
            "Ref": "AssetParameters4c2988a57571fd4c34de12bae67441541aeea1a59e085f95e5b708922ff45061S3Bucket0A1029B1",
          },
          "referencetoMyTestEksCdkStackAssetParameters4c2988a57571fd4c34de12bae67441541aeea1a59e085f95e5b708922ff45061S3VersionKey8FFE3660Ref": Object {
            "Ref": "AssetParameters4c2988a57571fd4c34de12bae67441541aeea1a59e085f95e5b708922ff45061S3VersionKeyFB75FDAC",
          },
        },
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.ap-northeast-1.",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Ref": "AssetParameters39ff76ace201d780b44b007170b6c3c07a4ae1da38071cb1a5612eb69fe98a95S3BucketE5D40562",
              },
              "/",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameters39ff76ace201d780b44b007170b6c3c07a4ae1da38071cb1a5612eb69fe98a95S3VersionKey7D7C6343",
                      },
                    ],
                  },
                ],
              },
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameters39ff76ace201d780b44b007170b6c3c07a4ae1da38071cb1a5612eb69fe98a95S3VersionKey7D7C6343",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
    },
    "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B": Object {
      "Properties": Object {
        "Parameters": Object {
          "referencetoMyTestEksCdkStackAssetParameters4c2988a57571fd4c34de12bae67441541aeea1a59e085f95e5b708922ff45061S3Bucket30A92DBERef": Object {
            "Ref": "AssetParameters4c2988a57571fd4c34de12bae67441541aeea1a59e085f95e5b708922ff45061S3Bucket0A1029B1",
          },
          "referencetoMyTestEksCdkStackAssetParameters4c2988a57571fd4c34de12bae67441541aeea1a59e085f95e5b708922ff45061S3VersionKey8FFE3660Ref": Object {
            "Ref": "AssetParameters4c2988a57571fd4c34de12bae67441541aeea1a59e085f95e5b708922ff45061S3VersionKeyFB75FDAC",
          },
          "referencetoMyTestEksCdkStackAssetParametersa6d508eaaa0d3cddbb47a84123fc878809c8431c5466f360912f70b5b9770afbS3Bucket600F5C54Ref": Object {
            "Ref": "AssetParametersa6d508eaaa0d3cddbb47a84123fc878809c8431c5466f360912f70b5b9770afbS3Bucket0C3A00C2",
          },
          "referencetoMyTestEksCdkStackAssetParametersa6d508eaaa0d3cddbb47a84123fc878809c8431c5466f360912f70b5b9770afbS3VersionKey6E9BD457Ref": Object {
            "Ref": "AssetParametersa6d508eaaa0d3cddbb47a84123fc878809c8431c5466f360912f70b5b9770afbS3VersionKeyBED95764",
          },
        },
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.ap-northeast-1.",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Ref": "AssetParameterse826620d24fa9b8f1789cd13e260f1c557e60bf4314d456530963654a9fb766bS3BucketC27C60D2",
              },
              "/",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameterse826620d24fa9b8f1789cd13e260f1c557e60bf4314d456530963654a9fb766bS3VersionKey72A176B8",
                      },
                    ],
                  },
                ],
              },
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameterse826620d24fa9b8f1789cd13e260f1c557e60bf4314d456530963654a9fb766bS3VersionKey72A176B8",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
    },
    "clusterAwsAuthmanifestB57F2A94": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "clusterC5B25D0D",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ConfigMap\\",\\"metadata\\":{\\"name\\":\\"aws-auth\\",\\"namespace\\":\\"kube-system\\"},\\"data\\":{\\"mapRoles\\":\\"[{\\\\\\"rolearn\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "EksRole7A4BFDF2",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "EksRole7A4BFDF2",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:masters\\\\\\"]}]\\",\\"mapUsers\\":\\"[]\\",\\"mapAccounts\\":\\"[]\\"}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "clusterCreationRole2B3B5002",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.MyTestEksCdkStackawscdkawseksKubectlProviderframeworkonEvent5A89646AArn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "clusterC5B25D0D": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "clusterCreationRoleDefaultPolicy69503D2C",
        "clusterCreationRole2B3B5002",
      ],
      "Properties": Object {
        "AssumeRoleArn": Object {
          "Fn::GetAtt": Array [
            "clusterCreationRole2B3B5002",
            "Arn",
          ],
        },
        "Config": Object {
          "name": "MyEKSCluster",
          "resourcesVpcConfig": Object {
            "securityGroupIds": Array [
              Object {
                "Fn::GetAtt": Array [
                  "clusterControlPlaneSecurityGroup7F1D5AB2",
                  "GroupId",
                ],
              },
            ],
            "subnetIds": Array [
              Object {
                "Fn::ImportValue": "MyTestVpcStack:ExportsOutputRefEksVpcPublicSubnet1SubnetD58F89DF4375B9FF",
              },
              Object {
                "Fn::ImportValue": "MyTestVpcStack:ExportsOutputRefEksVpcPublicSubnet2Subnet756C2CF701725B9C",
              },
              Object {
                "Fn::ImportValue": "MyTestVpcStack:ExportsOutputRefEksVpcPublicSubnet3Subnet8906CA88B6B679EB",
              },
              Object {
                "Fn::ImportValue": "MyTestVpcStack:ExportsOutputRefEksVpcPrivateSubnet1SubnetDC5B4B59DBC53273",
              },
              Object {
                "Fn::ImportValue": "MyTestVpcStack:ExportsOutputRefEksVpcPrivateSubnet2SubnetAED557957B12CFC0",
              },
              Object {
                "Fn::ImportValue": "MyTestVpcStack:ExportsOutputRefEksVpcPrivateSubnet3Subnet012DCC552D916B78",
              },
            ],
          },
          "roleArn": Object {
            "Fn::GetAtt": Array [
              "clusterRole88D0C969",
              "Arn",
            ],
          },
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
            "Outputs.MyTestEksCdkStackawscdkawseksClusterResourceProviderframeworkonEventA6DBB36AArn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-Cluster",
      "UpdateReplacePolicy": "Delete",
    },
    "clusterControlPlaneSecurityGroup7F1D5AB2": Object {
      "Properties": Object {
        "GroupDescription": "EKS Control Plane Security Group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "MyTestVpcStack:ExportsOutputRefEksVpc4BB427FA336B0142",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "clusterCreationRole2B3B5002": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  Object {
                    "Fn::GetAtt": Array [
                      "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
                      "Outputs.MyTestEksCdkStackawscdkawseksClusterResourceProviderOnEventHandlerServiceRoleB077E936Arn",
                    ],
                  },
                  Object {
                    "Fn::GetAtt": Array [
                      "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
                      "Outputs.MyTestEksCdkStackawscdkawseksClusterResourceProviderIsCompleteHandlerServiceRoleE22BEA65Arn",
                    ],
                  },
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
                    "Outputs.MyTestEksCdkStackawscdkawseksKubectlProviderHandlerServiceRoleA095113BArn",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "clusterCreationRoleDefaultPolicy69503D2C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "clusterRole88D0C969",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "ec2:DescribeSubnets",
                "ec2:DescribeRouteTables",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "eks:CreateCluster",
                "eks:DescribeCluster",
                "eks:DescribeUpdate",
                "eks:DeleteCluster",
                "eks:UpdateClusterVersion",
                "eks:UpdateClusterConfig",
                "eks:CreateFargateProfile",
                "eks:TagResource",
                "eks:UntagResource",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":eks:ap-northeast-1:999999999999:cluster/MyEKSCluster",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":eks:ap-northeast-1:999999999999:cluster/MyEKSCluster/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "eks:DescribeFargateProfile",
                "eks:DeleteFargateProfile",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":eks:ap-northeast-1:999999999999:fargateprofile/MyEKSCluster/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "iam:GetRole",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "iam:CreateServiceLinkedRole",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "clusterCreationRoleDefaultPolicy69503D2C",
        "Roles": Array [
          Object {
            "Ref": "clusterCreationRole2B3B5002",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "clusterNodegroupcapacity8E195C1A": Object {
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "clusterC5B25D0D",
        },
        "ForceUpdateEnabled": true,
        "InstanceTypes": Array [
          "t3.small",
        ],
        "Labels": Object {
          "cluster-code": "MyEKSCluster",
        },
        "NodeRole": Object {
          "Fn::GetAtt": Array [
            "clusterNodegroupcapacityNodeGroupRoleB8D8BFC1",
            "Arn",
          ],
        },
        "NodegroupName": "MyNodeGroup",
        "ScalingConfig": Object {
          "DesiredSize": 3,
          "MaxSize": 6,
          "MinSize": 3,
        },
        "Subnets": Array [
          Object {
            "Fn::ImportValue": "MyTestVpcStack:ExportsOutputRefEksVpcPrivateSubnet1SubnetDC5B4B59DBC53273",
          },
          Object {
            "Fn::ImportValue": "MyTestVpcStack:ExportsOutputRefEksVpcPrivateSubnet2SubnetAED557957B12CFC0",
          },
          Object {
            "Fn::ImportValue": "MyTestVpcStack:ExportsOutputRefEksVpcPrivateSubnet3Subnet012DCC552D916B78",
          },
        ],
      },
      "Type": "AWS::EKS::Nodegroup",
    },
    "clusterNodegroupcapacityNodeGroupRoleB8D8BFC1": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "clusterRole88D0C969": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "eks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSClusterPolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "clusterautoscalerClusterAutoScalerPolicyE94C7402": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeLaunchConfigurations",
                "autoscaling:DescribeTags",
                "autoscaling:SetDesiredCapacity",
                "autoscaling:TerminateInstanceInAutoScalingGroup",
                "ec2:DescribeLaunchTemplateVersions",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ClusterAutoScalerPolicy",
        "Roles": Array [
          Object {
            "Ref": "clusterNodegroupcapacityNodeGroupRoleB8D8BFC1",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "clusterautoscalerK8sResource7B7C10AC": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "clusterC5B25D0D",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"labels\\":{\\"k8s-addon\\":\\"cluster-autoscaler.addons.k8s.io\\",\\"k8s-app\\":\\"cluster-autoscaler\\"},\\"name\\":\\"cluster-autoscaler\\",\\"namespace\\":\\"kube-system\\"}},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"name\\":\\"cluster-autoscaler\\",\\"labels\\":{\\"k8s-addon\\":\\"cluster-autoscaler.addons.k8s.io\\",\\"k8s-app\\":\\"cluster-autoscaler\\"}},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"events\\",\\"endpoints\\"],\\"verbs\\":[\\"create\\",\\"patch\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"pods/eviction\\"],\\"verbs\\":[\\"create\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"pods/status\\"],\\"verbs\\":[\\"update\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"endpoints\\"],\\"resourceNames\\":[\\"cluster-autoscaler\\"],\\"verbs\\":[\\"get\\",\\"update\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"nodes\\"],\\"verbs\\":[\\"watch\\",\\"list\\",\\"get\\",\\"update\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"pods\\",\\"services\\",\\"replicationcontrollers\\",\\"persistentvolumeclaims\\",\\"persistentvolumes\\"],\\"verbs\\":[\\"watch\\",\\"list\\",\\"get\\"]},{\\"apiGroups\\":[\\"extensions\\"],\\"resources\\":[\\"replicasets\\",\\"daemonsets\\"],\\"verbs\\":[\\"watch\\",\\"list\\",\\"get\\"]},{\\"apiGroups\\":[\\"policy\\"],\\"resources\\":[\\"poddisruptionbudgets\\"],\\"verbs\\":[\\"watch\\",\\"list\\"]},{\\"apiGroups\\":[\\"apps\\"],\\"resources\\":[\\"statefulsets\\",\\"replicasets\\",\\"daemonsets\\"],\\"verbs\\":[\\"watch\\",\\"list\\",\\"get\\"]},{\\"apiGroups\\":[\\"storage.k8s.io\\"],\\"resources\\":[\\"storageclasses\\",\\"csinodes\\"],\\"verbs\\":[\\"watch\\",\\"list\\",\\"get\\"]},{\\"apiGroups\\":[\\"batch\\",\\"extensions\\"],\\"resources\\":[\\"jobs\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\",\\"patch\\"]},{\\"apiGroups\\":[\\"coordination.k8s.io\\"],\\"resources\\":[\\"leases\\"],\\"verbs\\":[\\"create\\"]},{\\"apiGroups\\":[\\"coordination.k8s.io\\"],\\"resourceNames\\":[\\"cluster-autoscaler\\"],\\"resources\\":[\\"leases\\"],\\"verbs\\":[\\"get\\",\\"update\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"Role\\",\\"metadata\\":{\\"name\\":\\"cluster-autoscaler\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"k8s-addon\\":\\"cluster-autoscaler.addons.k8s.io\\",\\"k8s-app\\":\\"cluster-autoscaler\\"}},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"configmaps\\"],\\"verbs\\":[\\"create\\",\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"configmaps\\"],\\"resourceNames\\":[\\"cluster-autoscaler-status\\",\\"cluster-autoscaler-priority-expander\\"],\\"verbs\\":[\\"delete\\",\\"get\\",\\"update\\",\\"watch\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"cluster-autoscaler\\",\\"labels\\":{\\"k8s-addon\\":\\"cluster-autoscaler.addons.k8s.io\\",\\"k8s-app\\":\\"cluster-autoscaler\\"}},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"cluster-autoscaler\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"cluster-autoscaler\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"RoleBinding\\",\\"metadata\\":{\\"name\\":\\"cluster-autoscaler\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"k8s-addon\\":\\"cluster-autoscaler.addons.k8s.io\\",\\"k8s-app\\":\\"cluster-autoscaler\\"}},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"Role\\",\\"name\\":\\"cluster-autoscaler\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"cluster-autoscaler\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"name\\":\\"cluster-autoscaler\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"app\\":\\"cluster-autoscaler\\"},\\"annotations\\":{\\"cluster-autoscaler.kubernetes.io/safe-to-evict\\":\\"false\\"}},\\"spec\\":{\\"replicas\\":1,\\"selector\\":{\\"matchLabels\\":{\\"app\\":\\"cluster-autoscaler\\"}},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app\\":\\"cluster-autoscaler\\"},\\"annotations\\":{\\"prometheus.io/scrape\\":\\"true\\",\\"prometheus.io/port\\":\\"8085\\"}},\\"spec\\":{\\"serviceAccountName\\":\\"cluster-autoscaler\\",\\"containers\\":[{\\"image\\":\\"k8s.gcr.io/cluster-autoscaler:v1.15.6\\",\\"name\\":\\"cluster-autoscaler\\",\\"resources\\":{\\"limits\\":{\\"cpu\\":\\"100m\\",\\"memory\\":\\"300Mi\\"},\\"requests\\":{\\"cpu\\":\\"100m\\",\\"memory\\":\\"300Mi\\"}},\\"command\\":[\\"./cluster-autoscaler\\",\\"--v=4\\",\\"--stderrthreshold=info\\",\\"--cloud-provider=aws\\",\\"--skip-nodes-with-local-storage=false\\",\\"--expander=least-waste\\",\\"--node-group-auto-discovery=asg:tag=k8s.io/cluster-autoscaler/enabled,k8s.io/cluster-autoscaler/",
              Object {
                "Ref": "clusterC5B25D0D",
              },
              "\\",\\"--balance-similar-node-groups\\",\\"--skip-nodes-with-system-pods=false\\"],\\"volumeMounts\\":[{\\"name\\":\\"ssl-certs\\",\\"mountPath\\":\\"/etc/ssl/certs/ca-certificates.crt\\",\\"readOnly\\":true}],\\"imagePullPolicy\\":\\"Always\\"}],\\"volumes\\":[{\\"name\\":\\"ssl-certs\\",\\"hostPath\\":{\\"path\\":\\"/etc/ssl/certs/ca-bundle.crt\\"}}]}}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "clusterCreationRole2B3B5002",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.MyTestEksCdkStackawscdkawseksKubectlProviderframeworkonEvent5A89646AArn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "ebscsidriverAmazonEBSCSIDriverAF709507": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2:AttachVolume",
                "ec2:CreateSnapshot",
                "ec2:CreateTags",
                "ec2:CreateVolume",
                "ec2:DeleteSnapshot",
                "ec2:DeleteTags",
                "ec2:DeleteVolume",
                "ec2:DescribeInstances",
                "ec2:DescribeSnapshots",
                "ec2:DescribeTags",
                "ec2:DescribeVolumes",
                "ec2:DetachVolume",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AmazonEBSCSIDriver",
        "Roles": Array [
          Object {
            "Ref": "clusterNodegroupcapacityNodeGroupRoleB8D8BFC1",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ebscsidriverK8sResource2B9EF818": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "clusterC5B25D0D",
        },
        "Manifest": "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"ebs-csi-controller-sa\\",\\"namespace\\":\\"kube-system\\"}},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"name\\":\\"ebs-external-attacher-role\\"},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"persistentvolumes\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\",\\"update\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"nodes\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"csi.storage.k8s.io\\"],\\"resources\\":[\\"csinodeinfos\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"storage.k8s.io\\"],\\"resources\\":[\\"volumeattachments\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\",\\"update\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"name\\":\\"ebs-external-provisioner-role\\"},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"persistentvolumes\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\",\\"create\\",\\"delete\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"persistentvolumeclaims\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\",\\"update\\"]},{\\"apiGroups\\":[\\"storage.k8s.io\\"],\\"resources\\":[\\"storageclasses\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"events\\"],\\"verbs\\":[\\"list\\",\\"watch\\",\\"create\\",\\"update\\",\\"patch\\"]},{\\"apiGroups\\":[\\"snapshot.storage.k8s.io\\"],\\"resources\\":[\\"volumesnapshots\\"],\\"verbs\\":[\\"get\\",\\"list\\"]},{\\"apiGroups\\":[\\"snapshot.storage.k8s.io\\"],\\"resources\\":[\\"volumesnapshotcontents\\"],\\"verbs\\":[\\"get\\",\\"list\\"]},{\\"apiGroups\\":[\\"storage.k8s.io\\"],\\"resources\\":[\\"csinodes\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"nodes\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"coordination.k8s.io\\"],\\"resources\\":[\\"leases\\"],\\"verbs\\":[\\"get\\",\\"watch\\",\\"list\\",\\"delete\\",\\"update\\",\\"create\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"ebs-csi-attacher-binding\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"ebs-external-attacher-role\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"ebs-csi-controller-sa\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"ebs-csi-provisioner-binding\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"ebs-external-provisioner-role\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"ebs-csi-controller-sa\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"name\\":\\"ebs-csi-controller\\",\\"namespace\\":\\"kube-system\\"},\\"spec\\":{\\"replicas\\":2,\\"selector\\":{\\"matchLabels\\":{\\"app\\":\\"ebs-csi-controller\\"}},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app\\":\\"ebs-csi-controller\\"}},\\"spec\\":{\\"containers\\":[{\\"args\\":[\\"--endpoint=$(CSI_ENDPOINT)\\",\\"--logtostderr\\",\\"--v=5\\"],\\"env\\":[{\\"name\\":\\"CSI_ENDPOINT\\",\\"value\\":\\"unix:///var/lib/csi/sockets/pluginproxy/csi.sock\\"},{\\"name\\":\\"AWS_ACCESS_KEY_ID\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"key_id\\",\\"name\\":\\"aws-secret\\",\\"optional\\":true}}},{\\"name\\":\\"AWS_SECRET_ACCESS_KEY\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"access_key\\",\\"name\\":\\"aws-secret\\",\\"optional\\":true}}}],\\"image\\":\\"602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/aws-ebs-csi-driver:v0.5.0\\",\\"livenessProbe\\":{\\"failureThreshold\\":5,\\"httpGet\\":{\\"path\\":\\"/healthz\\",\\"port\\":\\"healthz\\"},\\"initialDelaySeconds\\":10,\\"periodSeconds\\":10,\\"timeoutSeconds\\":3},\\"name\\":\\"ebs-plugin\\",\\"ports\\":[{\\"containerPort\\":9808,\\"name\\":\\"healthz\\",\\"protocol\\":\\"TCP\\"}],\\"volumeMounts\\":[{\\"mountPath\\":\\"/var/lib/csi/sockets/pluginproxy/\\",\\"name\\":\\"socket-dir\\"}]},{\\"args\\":[\\"--csi-address=$(ADDRESS)\\",\\"--v=5\\",\\"--feature-gates=Topology=true\\",\\"--enable-leader-election\\",\\"--leader-election-type=leases\\"],\\"env\\":[{\\"name\\":\\"ADDRESS\\",\\"value\\":\\"/var/lib/csi/sockets/pluginproxy/csi.sock\\"}],\\"image\\":\\"602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/csi-provisioner:v1.3.0\\",\\"name\\":\\"csi-provisioner\\",\\"volumeMounts\\":[{\\"mountPath\\":\\"/var/lib/csi/sockets/pluginproxy/\\",\\"name\\":\\"socket-dir\\"}]},{\\"args\\":[\\"--csi-address=$(ADDRESS)\\",\\"--v=5\\",\\"--leader-election=true\\",\\"--leader-election-type=leases\\"],\\"env\\":[{\\"name\\":\\"ADDRESS\\",\\"value\\":\\"/var/lib/csi/sockets/pluginproxy/csi.sock\\"}],\\"image\\":\\"602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/csi-attacher:v1.2.0\\",\\"name\\":\\"csi-attacher\\",\\"volumeMounts\\":[{\\"mountPath\\":\\"/var/lib/csi/sockets/pluginproxy/\\",\\"name\\":\\"socket-dir\\"}]},{\\"args\\":[\\"--csi-address=/csi/csi.sock\\"],\\"image\\":\\"602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/csi-liveness-probe:v1.1.0\\",\\"name\\":\\"liveness-probe\\",\\"volumeMounts\\":[{\\"mountPath\\":\\"/csi\\",\\"name\\":\\"socket-dir\\"}]}],\\"nodeSelector\\":{\\"beta.kubernetes.io/arch\\":\\"amd64\\",\\"beta.kubernetes.io/os\\":\\"linux\\"},\\"priorityClassName\\":\\"system-cluster-critical\\",\\"serviceAccount\\":\\"ebs-csi-controller-sa\\",\\"tolerations\\":[{\\"key\\":\\"CriticalAddonsOnly\\",\\"operator\\":\\"Exists\\"}],\\"volumes\\":[{\\"emptyDir\\":{},\\"name\\":\\"socket-dir\\"}]}}}},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"DaemonSet\\",\\"metadata\\":{\\"name\\":\\"ebs-csi-node\\",\\"namespace\\":\\"kube-system\\"},\\"spec\\":{\\"selector\\":{\\"matchLabels\\":{\\"app\\":\\"ebs-csi-node\\"}},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app\\":\\"ebs-csi-node\\"}},\\"spec\\":{\\"containers\\":[{\\"args\\":[\\"--endpoint=$(CSI_ENDPOINT)\\",\\"--logtostderr\\",\\"--v=5\\"],\\"env\\":[{\\"name\\":\\"CSI_ENDPOINT\\",\\"value\\":\\"unix:/csi/csi.sock\\"}],\\"image\\":\\"602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/aws-ebs-csi-driver:v0.5.0\\",\\"livenessProbe\\":{\\"failureThreshold\\":5,\\"httpGet\\":{\\"path\\":\\"/healthz\\",\\"port\\":\\"healthz\\"},\\"initialDelaySeconds\\":10,\\"periodSeconds\\":10,\\"timeoutSeconds\\":3},\\"name\\":\\"ebs-plugin\\",\\"ports\\":[{\\"containerPort\\":9808,\\"name\\":\\"healthz\\",\\"protocol\\":\\"TCP\\"}],\\"securityContext\\":{\\"privileged\\":true},\\"volumeMounts\\":[{\\"mountPath\\":\\"/var/lib/kubelet\\",\\"mountPropagation\\":\\"Bidirectional\\",\\"name\\":\\"kubelet-dir\\"},{\\"mountPath\\":\\"/csi\\",\\"name\\":\\"plugin-dir\\"},{\\"mountPath\\":\\"/dev\\",\\"name\\":\\"device-dir\\"}]},{\\"args\\":[\\"--csi-address=$(ADDRESS)\\",\\"--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)\\",\\"--v=5\\"],\\"env\\":[{\\"name\\":\\"ADDRESS\\",\\"value\\":\\"/csi/csi.sock\\"},{\\"name\\":\\"DRIVER_REG_SOCK_PATH\\",\\"value\\":\\"/var/lib/kubelet/plugins/ebs.csi.aws.com/csi.sock\\"}],\\"image\\":\\"602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/csi-node-driver-registrar:v1.1.0\\",\\"lifecycle\\":{\\"preStop\\":{\\"exec\\":{\\"command\\":[\\"/bin/sh\\",\\"-c\\",\\"rm -rf /registration/ebs.csi.aws.com-reg.sock /csi/csi.sock\\"]}}},\\"name\\":\\"node-driver-registrar\\",\\"volumeMounts\\":[{\\"mountPath\\":\\"/csi\\",\\"name\\":\\"plugin-dir\\"},{\\"mountPath\\":\\"/registration\\",\\"name\\":\\"registration-dir\\"}]},{\\"args\\":[\\"--csi-address=/csi/csi.sock\\"],\\"image\\":\\"602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/csi-liveness-probe:v1.1.0\\",\\"name\\":\\"liveness-probe\\",\\"volumeMounts\\":[{\\"mountPath\\":\\"/csi\\",\\"name\\":\\"plugin-dir\\"}]}],\\"hostNetwork\\":true,\\"nodeSelector\\":{\\"beta.kubernetes.io/arch\\":\\"amd64\\",\\"beta.kubernetes.io/os\\":\\"linux\\"},\\"priorityClassName\\":\\"system-node-critical\\",\\"tolerations\\":[{\\"operator\\":\\"Exists\\"}],\\"volumes\\":[{\\"hostPath\\":{\\"path\\":\\"/var/lib/kubelet\\",\\"type\\":\\"Directory\\"},\\"name\\":\\"kubelet-dir\\"},{\\"hostPath\\":{\\"path\\":\\"/var/lib/kubelet/plugins/ebs.csi.aws.com/\\",\\"type\\":\\"DirectoryOrCreate\\"},\\"name\\":\\"plugin-dir\\"},{\\"hostPath\\":{\\"path\\":\\"/var/lib/kubelet/plugins_registry/\\",\\"type\\":\\"Directory\\"},\\"name\\":\\"registration-dir\\"},{\\"hostPath\\":{\\"path\\":\\"/dev\\",\\"type\\":\\"Directory\\"},\\"name\\":\\"device-dir\\"}]}}}},{\\"apiVersion\\":\\"storage.k8s.io/v1beta1\\",\\"kind\\":\\"CSIDriver\\",\\"metadata\\":{\\"name\\":\\"ebs.csi.aws.com\\",\\"namespace\\":\\"kube-system\\"},\\"spec\\":{\\"attachRequired\\":true,\\"podInfoOnMount\\":false}}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "clusterCreationRole2B3B5002",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.MyTestEksCdkStackawscdkawseksKubectlProviderframeworkonEvent5A89646AArn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "extrernaldnsExternalDNS992E54DD": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "route53:ChangeResourceRecordSets",
              "Effect": "Allow",
              "Resource": "arn:aws:route53:::hostedzone/*",
            },
            Object {
              "Action": Array [
                "route53:ListHostedZones",
                "route53:ListResourceRecordSets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ExternalDNS",
        "Roles": Array [
          Object {
            "Ref": "clusterNodegroupcapacityNodeGroupRoleB8D8BFC1",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "extrernaldnsK8sResource0278304D": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "clusterC5B25D0D",
        },
        "Manifest": "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"external-dns\\",\\"namespace\\":\\"kube-system\\"}},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1beta1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"name\\":\\"external-dns\\"},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"services\\"],\\"verbs\\":[\\"get\\",\\"watch\\",\\"list\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"pods\\"],\\"verbs\\":[\\"get\\",\\"watch\\",\\"list\\"]},{\\"apiGroups\\":[\\"extensions\\"],\\"resources\\":[\\"ingresses\\"],\\"verbs\\":[\\"get\\",\\"watch\\",\\"list\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"nodes\\"],\\"verbs\\":[\\"list\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1beta1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"external-dns-viewer\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"external-dns\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"external-dns\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"name\\":\\"external-dns\\",\\"namespace\\":\\"kube-system\\"},\\"spec\\":{\\"selector\\":{\\"matchLabels\\":{\\"app\\":\\"external-dns\\"}},\\"strategy\\":{\\"type\\":\\"Recreate\\"},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app\\":\\"external-dns\\"}},\\"spec\\":{\\"serviceAccountName\\":\\"external-dns\\",\\"containers\\":[{\\"name\\":\\"external-dns\\",\\"image\\":\\"registry.opensource.zalan.do/teapot/external-dns:v0.7.1\\",\\"args\\":[\\"--source=service\\",\\"--source=ingress\\",\\"--domain-filter=test.example.com\\",\\"--provider=aws\\",\\"--policy=upsert-only\\",\\"--aws-zone-type=public\\",\\"--registry=txt\\",\\"--txt-owner-id=my-identifier\\"]}]}}}}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "clusterCreationRole2B3B5002",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.MyTestEksCdkStackawscdkawseksKubectlProviderframeworkonEvent5A89646AArn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "metricsserverK8sResourceBB4DF557": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "clusterC5B25D0D",
        },
        "Manifest": "[{\\"kind\\":\\"ClusterRole\\",\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"metadata\\":{\\"name\\":\\"system:aggregated-metrics-reader\\",\\"labels\\":{\\"rbac.authorization.k8s.io/aggregate-to-view\\":\\"true\\",\\"rbac.authorization.k8s.io/aggregate-to-edit\\":\\"true\\",\\"rbac.authorization.k8s.io/aggregate-to-admin\\":\\"true\\"}},\\"rules\\":[{\\"apiGroups\\":[\\"metrics.k8s.io\\"],\\"resources\\":[\\"pods\\",\\"nodes\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1beta1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"metrics-server:system:auth-delegator\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"system:auth-delegator\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1beta1\\",\\"kind\\":\\"RoleBinding\\",\\"metadata\\":{\\"name\\":\\"metrics-server-auth-reader\\",\\"namespace\\":\\"kube-system\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"Role\\",\\"name\\":\\"extension-apiserver-authentication-reader\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"apiregistration.k8s.io/v1beta1\\",\\"kind\\":\\"APIService\\",\\"metadata\\":{\\"name\\":\\"v1beta1.metrics.k8s.io\\"},\\"spec\\":{\\"service\\":{\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\"},\\"group\\":\\"metrics.k8s.io\\",\\"version\\":\\"v1beta1\\",\\"insecureSkipTLSVerify\\":true,\\"groupPriorityMinimum\\":100,\\"versionPriority\\":100}},{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\"}},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"k8s-app\\":\\"metrics-server\\"}},\\"spec\\":{\\"selector\\":{\\"matchLabels\\":{\\"k8s-app\\":\\"metrics-server\\"}},\\"template\\":{\\"metadata\\":{\\"name\\":\\"metrics-server\\",\\"labels\\":{\\"k8s-app\\":\\"metrics-server\\"}},\\"spec\\":{\\"serviceAccountName\\":\\"metrics-server\\",\\"volumes\\":[{\\"name\\":\\"tmp-dir\\",\\"emptyDir\\":{}}],\\"containers\\":[{\\"name\\":\\"metrics-server\\",\\"image\\":\\"k8s.gcr.io/metrics-server-amd64:v0.3.6\\",\\"imagePullPolicy\\":\\"Always\\",\\"volumeMounts\\":[{\\"name\\":\\"tmp-dir\\",\\"mountPath\\":\\"/tmp\\"}]}]}}}},{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"Service\\",\\"metadata\\":{\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"kubernetes.io/name\\":\\"Metrics-server\\",\\"kubernetes.io/cluster-service\\":\\"true\\"}},\\"spec\\":{\\"selector\\":{\\"k8s-app\\":\\"metrics-server\\"},\\"ports\\":[{\\"port\\":443,\\"protocol\\":\\"TCP\\",\\"targetPort\\":443}]}},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"name\\":\\"system:metrics-server\\"},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"pods\\",\\"nodes\\",\\"nodes/stats\\",\\"namespaces\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"system:metrics-server\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"system:metrics-server\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\"}]}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "clusterCreationRole2B3B5002",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.MyTestEksCdkStackawscdkawseksKubectlProviderframeworkonEvent5A89646AArn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
  },
}
`;
